basePath: /
definitions:
  models.User:
    properties:
      birthdate:
        type: string
      country:
        type: string
      email:
        type: string
      id:
        type: string
      premium:
        type: boolean
      username:
        type: string
    type: object
  users.RequestBody:
    properties:
      birthdate:
        type: string
      country:
        type: string
      email:
        type: string
      premium:
        type: boolean
      username:
        type: string
    type: object
info:
  contact:
    email: labassimarouene@gmail.com
    name: Marouene Labassi .
  description: API to manage users.
  title: middleware/example
  version: 1.0.0
paths:
  /users:
    post:
      consumes:
      - application/json
      description: Creates a new user with provided details.
      parameters:
      - description: User details
        in: body
        name: requestBody
        required: true
        schema:
          $ref: '#/definitions/users.RequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new user.
      tags:
      - users
  /users/{userId}:
    get:
      description: Retrieve a user by ID.
      parameters:
      - description: User UUID formatted ID
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
        "500":
          description: Internal Server Error
      summary: Get a user by ID.
      tags:
      - users
schemes:
- http
swagger: "2.0"
